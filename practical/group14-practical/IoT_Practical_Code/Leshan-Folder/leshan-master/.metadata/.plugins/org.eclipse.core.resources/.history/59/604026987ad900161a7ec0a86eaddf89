/*******************************************************************************
 * Copyright (c) 2017 Sierra Wireless and others.
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v1.0 which accompany this distribution.
 * 
 * The Eclipse Public License is available at
 *    http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 *    http://www.eclipse.org/org/documents/edl-v10.html.
 * 
 * Contributors:
 *     Sierra Wireless - initial API and implementation
 *******************************************************************************/
package org.eclipse.leshan.client.demo;

import org.eclipse.leshan.client.resource.BaseInstanceEnabler;
import org.eclipse.leshan.core.node.LwM2mResource;
import org.eclipse.leshan.core.response.ReadResponse;
import org.eclipse.leshan.core.response.WriteResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MySensor extends BaseInstanceEnabler {

    private static final Logger LOG = LoggerFactory.getLogger(MyLocation.class);
    private int groupNo;
    private String roomId;
    private float locationX;
    private float locationY;

    public MySensor() {
        this.groupNo = 0;
        this.locationX = 0;
        this.locationY = 0;
        this.roomId = "Room-0";
    }

    @Override
    public ReadResponse read(int resourceid) {
        LOG.info("Read on Location Resource " + resourceid);
        switch (resourceid) {
        case 0:
            return ReadResponse.success(resourceid, getSensorId());
        case 1:
            return ReadResponse.success(resourceid, getDeviceType());
        case 2:
            return ReadResponse.success(resourceid, getSensorState());
        case 3:
            return ReadResponse.success(resourceid, getUserId());
        case 4:
            return ReadResponse.success(resourceid, getGroupNo());
        case 5:
            return ReadResponse.success(resourceid, getLocationX());
        case 6:
            return ReadResponse.success(resourceid, getLocationY());
        case 7:
            return ReadResponse.success(resourceid, getRoomId());
        default:
            return super.read(resourceid);
        }
    }

    @Override
    public WriteResponse write(int resourceid, LwM2mResource value) {
        LOG.info("Write on Device Resource " + resourceid + " value " + value);
        switch (resourceid) {
        case 2:
            // return WriteResponse.notFound();
        case 3:
            // return WriteResponse.success();
        case 4:
            setGroupNo((int) value.getValue());
            fireResourcesChange(resourceid);
            return WriteResponse.success();
        case 5:
            setLocationX((float) value.getValue());
            fireResourcesChange(resourceid);
            return WriteResponse.success();
        case 6:
            setLocationY((float) value.getValue());
            fireResourcesChange(resourceid);
            return WriteResponse.success();
        case 7:
            setRoomId((String) value.getValue());
            fireResourcesChange(resourceid);
            return WriteResponse.success();
        default:
            return super.write(resourceid, value);
        }
    }

    // getters
    private String getSensorId() {
        return "Sensor-Device-" + getGroupNo() + "-1";
    }

    private String getDeviceType() {
        return "Sensor Device";
    }

    private String getSensorState() {
        return "FREE";
    }

    private String getUserId() {
        return "Office-Worker-" + getGroupNo();
    }

    private int getGroupNo() {
        return groupNo;
    }

    private float getLocationX() {
        return locationX;
    }

    private float getLocationY() {
        return locationY;
    }

    private String getRoomId() {
        return roomId;
    }

    // Setters
    private void setGroupNo(int group) {
        groupNo = group;
    }

    private void setLocationX(float x) {
        locationX = x;
    }

    private void setLocationY(float y) {
        locationX = y;
    }

    private void setRoomId(String room) {
        roomId = room;
    }

}
